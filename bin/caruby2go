#!/usr/bin/env ruby

require 'thor'
require_relative '../lib/caruby2go.rb'

##
# Script for running the gem from the command line
class Caruby2goScript < Thor
  RECORD_SEPARATOR = '========================================================='

  class_option :raw, :type => :boolean, :desc => "Print the raw JSON from Car2Go"

  desc 'vehicles CITY', 'get vehicles for CITY'
  def vehicles(city)
    call_api(city)
  end

  desc 'locations', 'get Car2Go cities'
  def locations
    call_api
  end

  desc 'gasstations CITY', 'get gas stations for CITY'
  def gasstations(city)
    call_api(city)
  end

  desc 'parkingspots CITY', 'get parking spots for CITY'
  def parkingspots(city)
    call_api(city)
  end

  desc 'operationareas CITY', 'get operating areas'
  def operationareas(city)
    call_api(city)
  end

  private

  # this is set using an environment variable
  def require_key
    return if ENV['CONSUMER_KEY']
    puts 'Set environment variable CONSUMER_KEY to your Car2Go consumer key.'
    puts 'For example:'
    puts '    $ CONSUMER_KEY=yourkey bin/caruby2go v twincities'
    false
  end

  def call_api(city = nil)
    require_key
    caruby2go = Caruby2go.new(ENV['CONSUMER_KEY'], city)
    results = caruby2go.send("#{caller_locations(1, 1)[0].label}".to_sym)
    print results
  end

  def print(records)
    if options[:raw]
      puts records
    else
      records.each do |record|
        puts RECORD_SEPARATOR
        record.each do |k, v|
          puts "#{k}:: #{v}"
        end
      end
      puts RECORD_SEPARATOR
    end
  end
end

Caruby2goScript.start(ARGV)
